c
C
c
exit
@error[:location] === ip
ip
@error
c
@error
exit
@error
ip
c
IPAddr.new(ip)
ip
exit
exi
IPAddr.new(@error)
IPAddr.new('216.69.185.6')
dst
@error
exit
c
@error
c
@error
c
@error
c
@error
c
@error
c
@error
c
@error
exit
@error.message
@error.methods
@error
c
ip
@error
exit
ip.to_s
ip.private?
ip.methods
ip
c
@error
c
@error
c
@error
c
@error
c
@error
exit
error
exit
c
exit
IPAddr.new
exit
c
src.split(' ').first
src.split(' ')
src.split('')
src
exit
log.rpartition("src=").last
log.rpartition("src=")
exit
log.partition("src=").last
log.partition("src=").lst
log.partition("src=")
log.gsub("src", '')
log.gsub("src")
log
exit
cl
log
c
log
c
log
c
log
c
log
lopg
c
log
c
log
exit
log[:text]
log
c
exit
log.split('<3').each {|l| puts l}
log.split('<3')
log.class
log
